#include <iostream>

struct Node
{
	int value;
	Node*next = NULL;
};
void print(Node*n) {
	while (true) {
		if (n == NULL) {
			break;
		}
		else {
			std::cout << n->value << " ";
			n = n->next;
		}
	}


}
void getvalue(Node*n, int index) {
	for (int i = 0; i < index-1; i++) {
		n = n->next;
	}
	std::cout << n->value;
}
void changevalue(Node*n, int index, int yvalue) {
	for (int i = 0; i < index - 1; i++) {
		n = n->next;
	}
	n->value = yvalue;
}
void add(Node*n, int yvalue) {   

	while (true) {
		if (n->next == NULL) {
			Node*n4 = new Node();
		    n4->value = yvalue;
			n->next = n4;
			break;
		}
		else { n = n->next; }
	}
}
void remove(Node*n) {
	while (true) {
		if (n->next == NULL) {
		
			n = NULL;
			break;
		}
		else { n = n->next; }
	}

}

int main() {
	Node*n1 = new Node();
	n1->value = 2;
	Node*n2 = new Node();
	n2->value = 3;
	Node*n3 = new Node();
	n3->value = 8;
	n1->next = n2;
	n2->next = n3;
	print(n1);
	std::cout << std::endl;
	getvalue(n1, 2);
	std::cout << std::endl;
	changevalue(n1, 3, 6);
	getvalue(n1, 3);
	std::cout << std::endl;
	add(n1, 7);
	getvalue(n1, 4);
	std::cout << std::endl;
	remove(n1);
	print(n1);
	std::cout << std::endl;

	system("pause");
	return 0;
}
